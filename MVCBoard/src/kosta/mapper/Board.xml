<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="kosta.mapper.BoardMapper">
	<cache />
	<!-- insert update delete result타입 없음 select는 result타입있음 -->
	<!-- parameterType Board로 지정 -->
	<insert id="insertBoard" parameterType="Board">
		insert into board values(board_seq.nextval, #{title},
								#{writer}, #{contents}, sysdate, 0, #{fname})
	</insert>
	
	<!-- select * from board
				where (title LIKE %홍길동% OR writer LIKE %홍길동%)
	 -->
	<!-- mabatis-config.xml에 insertBoard 담자 -->
	
	<select id="listBoard" resultType="Board" parameterType="Search">
		select * from board
		<if test="area != null">
			<where>
				<foreach collection="area" item="item" separator="OR"
				open="(" close=")">
					${item} LIKE #{searchKey}
				</foreach>
				<!-- 배열 안의 item 하나씩 뽑아오자 -->
				<!-- 컬럼명(title, writer 등)은 변수명이 되면 안된다 -->
				<!-- ${} 리터럴형식으로 보여질 수 있다 -->
			</where>
		</if>
		order by seq desc
	</select>
	
	<select id="contentsBoard" parameterType="int" resultType="Board">
		select * from board
		where seq = #{seq}
	</select>
	
	<select id="countBoard" resultType="int" parameterType="Search">
		select count(*) from board
		<if test="area != null">
			<where>
				<foreach collection="area" item="item" separator="OR"
				open="(" close=")">
					${item} LIKE #{searchKey}
				</foreach>
			</where>
		</if>
	</select> <!-- 검색은 포함 안되어 있다 -> Search객체 필요 -->
	
	<insert id="insertReply" parameterType="Reply">
		insert into reply
			values(reply_seq.nextval, #{r_title}, #{r_writer}, #{r_contents},
				   sysdate, #{seq})
	</insert>
	
	<select id="listReply" parameterType="int" resultType="Reply">
		select * from reply where seq = #{seq} <!-- 댓글 목록 뽑기 -->
	</select>
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from board
		where seq = #{seq}
	</delete>
	
	
	<!-- 글 업데이트 -->
	<update id="modifyBoard" parameterType="Board">
		update board set
				title = #{title},

				writer = #{writer},

				contents = #{contents}

		where seq = #{seq}
	</update>
</mapper>















